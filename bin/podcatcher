#! /usr/bin/env ruby
# -*- coding: utf-8 -*-
require "rss"

# Go over each podcast and sum the durations to get a quick check on how much time I've listened to them.
#
# A lot.

podcasts = [
  {name: "ATP", rss: "http://atp.fm/episodes?format=rss"},
  {name: "Kermode and Mayo's Film Review", rss: "http://downloads.bbc.co.uk/podcasts/fivelive/kermode/rss.xml"},
  {name: "Hypercritical", rss: "http://feeds.5by5.tv/hypercritical"},
  {name: "Bugle (old)", rss: "http://podcast.timesonline.co.uk/rss/thebuglemp3.rss"},
  {name: "Bugle", rss: "http://feeds.feedburner.com/thebuglefeed"},
  {name: "Incomparable", rss: "http://feeds.theincomparable.com/theincomparable"}
]
total_listening_time = 0

# Takes a duration string and tries to return the number of seconds
#       1:10:01 => 3600 + 600 + 1
#       1:10 => 600 + 10
#       123 => 123
def duration_to_sec(duration)
  seconds, minutes, hours = duration.split(":").reverse

  (hours.to_i * 60 * 60) + (minutes.to_i * 60) + seconds.to_i
end

def humanize(secs)
  parts = [[60, [:second, :seconds]],
           [60, [:minute, :minutes]],
           [24, [:hour, :hours]],
           [1000, [:day, :days]]].collect { |count, (singular, plural)|
    if secs > 0
      secs, n = secs.divmod(count)
      count = n.to_i
      next unless count > 0
      if count > 1
        "#{count} #{plural}"
      else
        "#{count} #{singular}"
      end
    end
  }.compact.reverse
  last = parts.pop
  if parts.count > 0
    "#{parts.join(", ")} and #{last}"
  else
    last
  end
end
require "pry"
podcasts.each do |podcast|
  puts "Fetching #{podcast[:name]}..."
  rss = RSS::Parser.parse(podcast[:rss], false)
  podcast[:shows] = rss.items.collect do |item|
    unless item.itunes_duration
      puts "#{item.dc_creator} did not set itunes duration for #{item.title}"
      next
    end
    duration = duration_to_sec(item.itunes_duration.content)
    if duration > 5*60*60
      puts "You've listened to a podcast that's over 5 hours long?"
      puts "%s - %s (%s)" % [item.title, item.itunes_duration.content, humanize(duration)]
      puts "Impressive"
    end
    [item.title, item.itunes_duration, duration_to_sec(item.itunes_duration.content)]
  end.compact
  podcast[:total_seconds] = podcast[:shows].inject(0) {|sum, x| sum + x.last}
  total_listening_time += podcast[:total_seconds]
end

podcasts.each do |podcast|
  puts "#{podcast[:name]}\n"
  puts "  You've listened to #{podcast[:shows].count} shows"
  puts "  Current listening time: #{humanize(podcast[:total_seconds])}"
end
puts ""
puts "You've listened to a whopping #{humanize(total_listening_time)} of podcasts"

# Fetching ATP...
# Fetching Kermode and Mayo's Film Review...
# Fetching Hypercritical...
# Fetching Bugle (old)...
# Fetching Bugle...
# Fetching Incomparable...
# ATP
#   You've listened to 100 shows
#   Current listening time: 7 days 20 hours 11 minutes 19 seconds
# Kermode and Mayo's Film Review
#   You've listened to 284 shows
#   Current listening time: 17 days 18 hours 22 minutes 58 seconds
# Hypercritical
#   You've listened to 100 shows
#   Current listening time: 6 days 17 hours 7 minutes 0 seconds
# Bugle (old)
#   You've listened to 214 shows
#   Current listening time: 5 days 4 hours 1 minutes 14 seconds
# Bugle
#   You've listened to 161 shows
#   Current listening time: 3 days 17 hours 54 minutes 37 seconds
# Incomparable
#   You've listened to 280 shows
#   Current listening time: 14 days 20 hours 49 minutes 5 seconds

# You've listened to a whopping 56 days 2 hours 26 minutes 13 seconds of podcasts
